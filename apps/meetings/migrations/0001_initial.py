# Generated by Django 3.0.3 on 2020-03-05 19:52

import apiview.model
import core.utils
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wechat', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='主键ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, db_index=True, verbose_name='修改时间')),
                ('delete_status', models.BooleanField(choices=[(False, '正常'), (True, '已经删除')], db_index=True, default=False, verbose_name='删除状态')),
                ('remark', models.TextField(blank=True, default='', null=True, verbose_name='备注说明')),
                ('name', models.CharField(default='', max_length=64, verbose_name='名称')),
                ('description', models.CharField(blank=True, default='', max_length=255, verbose_name='描述')),
                ('date', models.DateField(db_index=True, editable=False, verbose_name='会议日期')),
                ('start_time', models.TimeField(editable=False, verbose_name='开始时间')),
                ('end_time', models.TimeField(editable=False, verbose_name='结束时间')),
            ],
            options={
                'verbose_name': '会议',
                'verbose_name_plural': '会议',
            },
            bases=(models.Model, apiview.model.ModelFieldChangeMixin),
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='主键ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, db_index=True, verbose_name='修改时间')),
                ('delete_status', models.BooleanField(choices=[(False, '正常'), (True, '已经删除')], db_index=True, default=False, verbose_name='删除状态')),
                ('remark', models.TextField(blank=True, default='', null=True, verbose_name='备注说明')),
                ('name', models.CharField(default='', max_length=64, verbose_name='名称')),
                ('description', models.CharField(blank=True, default='', max_length=255, verbose_name='描述')),
                ('qr_code', models.ImageField(default='', editable=False, max_length=512, upload_to='%Y/%m/%d/', verbose_name='二维码')),
                ('create_user_manager', models.BooleanField(default=False, help_text='会议室创建人可以管理该会议室内所有会议', verbose_name='创建人管理权限')),
                ('create_user', core.utils.ForeignKey(db_constraint=False, editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='create_rooms', to='wechat.User', verbose_name='创建人')),
            ],
            options={
                'verbose_name': '会议室',
                'verbose_name_plural': '会议室',
            },
            bases=(models.Model, apiview.model.ModelFieldChangeMixin),
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='MeetingTrace',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='主键ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, db_index=True, verbose_name='修改时间')),
                ('delete_status', models.BooleanField(choices=[(False, '正常'), (True, '已经删除')], db_index=True, default=False, verbose_name='删除状态')),
                ('remark', models.TextField(blank=True, default='', null=True, verbose_name='备注说明')),
                ('owner', models.BooleanField(verbose_name='是否发起人自己操作')),
                ('type', models.IntegerField(choices=[(10, '修改'), (20, '取消')], verbose_name='操作类型')),
                ('data', models.CharField(default='', max_length=4096, verbose_name='详细信息')),
                ('meeting', core.utils.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='meetings.Meeting', verbose_name='会议')),
                ('user', core.utils.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='wechat.User', verbose_name='操作人')),
            ],
            options={
                'verbose_name': '会议操作历史',
                'verbose_name_plural': '会议操作历史',
            },
            bases=(models.Model, apiview.model.ModelFieldChangeMixin),
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='meeting',
            name='room',
            field=core.utils.ForeignKey(db_constraint=False, editable=False, on_delete=django.db.models.deletion.DO_NOTHING, to='meetings.Room', verbose_name='会议室'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='user',
            field=core.utils.ForeignKey(db_constraint=False, editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='reserve_meetings', to='wechat.User', verbose_name='发起人'),
        ),
        migrations.CreateModel(
            name='UserFollowRoom',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='主键ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, db_index=True, verbose_name='修改时间')),
                ('delete_status', models.BooleanField(choices=[(False, '正常'), (True, '已经删除')], db_index=True, default=False, verbose_name='删除状态')),
                ('remark', models.TextField(blank=True, default='', null=True, verbose_name='备注说明')),
                ('room', core.utils.ForeignKey(db_constraint=False, editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='follows', to='meetings.Room', verbose_name='会议室')),
                ('user', core.utils.ForeignKey(db_constraint=False, editable=False, on_delete=django.db.models.deletion.DO_NOTHING, to='wechat.User', verbose_name='关注人')),
            ],
            options={
                'verbose_name': '用户关注会议室',
                'verbose_name_plural': '用户关注会议室',
                'unique_together': {('user', 'room')},
            },
            bases=(models.Model, apiview.model.ModelFieldChangeMixin),
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='MeetingAttendee',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='主键ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, db_index=True, verbose_name='修改时间')),
                ('delete_status', models.BooleanField(choices=[(False, '正常'), (True, '已经删除')], db_index=True, default=False, verbose_name='删除状态')),
                ('remark', models.TextField(blank=True, default='', null=True, verbose_name='备注说明')),
                ('meeting', core.utils.ForeignKey(db_constraint=False, editable=False, on_delete=django.db.models.deletion.DO_NOTHING, to='meetings.Meeting', verbose_name='会议')),
                ('user', core.utils.ForeignKey(db_constraint=False, editable=False, on_delete=django.db.models.deletion.DO_NOTHING, to='wechat.User', verbose_name='参与人')),
            ],
            options={
                'verbose_name': '参会人',
                'verbose_name_plural': '参会人',
                'unique_together': {('user', 'meeting')},
            },
            bases=(models.Model, apiview.model.ModelFieldChangeMixin),
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
